/* CSS RESET */
/* Box sizing rules */
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}



/* Set core body defaults */
body {
  text-rendering: optimizeSpeed;
}    

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}
    
/* A element that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}
    
/* Make images easier to work with */
img,
picture {
  max-width: 100%; /* img should never overflow past the available space*/
  display: block; /* avoid blank bottom*/
  height: auto;/*preserve aspect ratio*/
}

/* More consistent, styleable hr*/
hr {
  border-width: 1px 0 0 0;
  color: inherit;
  height: 0;
  overflow: visible;
}

/* Remove built-in form typography styles */
input, button, textarea, select {
  font: inherit;
  color: inherit;
}

/* More space above the underline */
a {
  text-underline-offset: 0.2ex;
}


/*body *{
    outline : 2px solid red ;
}*/


p {
  font-size: var(--tailleparagraphe);
  line-height: 1.5;
}

h1 {
  font-size: var(--tailleh2);
  line-height: 1.3;
  letter-spacing: 0.08rem;
}

body {
  font-family: 'Roboto', sans-serif;
  background-color: rgb(200, 220, 231);
}

/* CUSTOM PROPERTIES */

:root {
  --tailleparagraphe: 1rem;
  --tailleh2: clamp(1.5rem, 1.425rem + 0.375vw, 1.875rem);
  --tailleh1: clamp(2rem, 1.9rem + 0.5vw, 2.5rem);
  --rythmeS: clamp(1.5rem, 1.425rem + 0.375vw, 1.875rem);
  --rythmeM: clamp(1.875rem, 1.7814rem + 0.468vw, 2.343rem);
  --rythmeL: clamp(2.343rem, 2.226rem + 0.585vw, 2.928rem);
  --rythmeXL: clamp(2.928rem, 2.782rem + 0.731vw, 3.66rem);
  --bg: #d3d7fa;
  --txt : rgb(78, 76, 76);
  --left-circle : rgba(235, 255, 59);
  --right-circle : rgba(167, 59, 255);
  --hover-width: 75%;
  --other-width: 25%;
  --speed: 1s;
}

/* GENERAL LAYOUT */

.container {
  display: flex;
  flex-wrap: wrap;
  padding: var(--rythmeS);
  justify-content: center;
  align-items: center;
  height: 100dvh;
}

.left {
  flex: 1;
  flex-basis: 50%;
  display: flex;
  position: relative;
  gap: var(--rythmeS);
}
.right {
  flex: 1;
  flex-basis: 50%;
  display: flex;
  position: relative;
  gap: var(--rythmeS);
}

/*BACKGROUND IMG*/

.product-img {
  flex-grow: 1;
  background-size: contain;
  background-position: 50%;
  background-repeat: no-repeat;
}

#img-ps4 {
  background-image: url(ps4-controller.png);
  transform: scaleX(-1) scale(1.1);
  flex-basis: 50%;
  min-width: 15dvw;
}

#img-stadia {
  background-image: url(stadia-controller.png);
  flex-basis: 50%;
  min-width: 15dvw;
}

/*BACKGROUND CIRCLE*/
.circle {
  position: absolute;
  width: 400px;
  height: 400px;
  top: 200px;
  left: 200px;
  border-radius: 50%;
  z-index: -1000;
  filter: blur(6px);
}

#ps4-circle {
  background: var(--left-circle);
}

#stadia-circle {
  background: var(--right-circle);
}

/*CARD*/
.card {
  min-height: min-content;
  flex: 1;
  flex-basis: 50%;
  padding: var(--rythmeS);
  border-radius: 20px;
  color: var(--txt);
  /*GLASSMORPHISM*/
  z-index: 1000;
  backdrop-filter: blur(25px);
  background: rgba(239, 237, 237, 0.37);
  background-clip: padding-box;
  border: solid 2px transparent;
  box-shadow: -1px 1px 1px rgba(43, 42, 42, 0.066);
}

.card > p, ul{
  margin-top: calc(0.5*var(--rythmeS));
}

.card > h2 {
  margin-top: var(--rythmeS);
}

.release-date {
  font-style: italic;
}
.buy {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--rythmeXL);
  margin-top: var(--rythmeS);
  margin-bottom: var(--rythmeS);
}

.btn {
  display: inline-block;
  padding: 0.5rem;
  border: none;
  display: flex;
  gap: 1rem;
  align-items: center;
  justify-content: space-evenly;
  border-radius: 0.25rem;
  box-shadow: -2px 2px 2px rgba(46, 54, 68, 0.2);
  font-weight: 700;
}

#btn-left {
  background-color: var(--left-circle);
}

#btn-left:hover{
  background-color: var(--txt);
  color: var(--left-circle);
  cursor: pointer;
}

#btn-right {
  background-color: var(--right-circle);
}

#btn-right:hover{
  background-color: var(--txt);
  color: var(--right-circle);
  cursor: pointer;
}

/*JS*/

.right,
.left,
.right::before,
.left::before,
.left::after,
.right::after {
  transition: filter var(--speed), opacity var(--speed) ease-out;
}


.not-hover{
  filter: blur(8px);
  opacity: 0.6;
}